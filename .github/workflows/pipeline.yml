name: Build base images

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: "0 4 * * 6"

permissions:
  id-token: write
  contents: read

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build base images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build nginx
        run: |
          IMAGE_NAME="${{ env.REGISTRY }}/docker/nginx:latest"
          docker buildx build \
            --tag $IMAGE_NAME \
            --platform linux/amd64,linux/arm64 \
            -f nginx.Dockerfile \
            .
          docker images
          docker push $IMAGE_NAME

      - name: Build jobs
        run: |
          IMAGE_NAME="${{ env.REGISTRY }}/docker/jobs:latest"
          docker buildx build \
            --tag $IMAGE_NAME \
            --platform linux/amd64,linux/arm64 \
            --build-arg PHP_VERSION=7.4 \
            -f jobs.Dockerfile \
            .
          docker images
          docker push $IMAGE_NAME

      - name: Build php-fpm
        run: |
          IMAGE_NAME="${{ env.REGISTRY }}/docker/phpfpm:latest"
          docker buildx build \
            --tag $IMAGE_NAME \
            --platform linux/amd64,linux/arm64 \
            --build-arg PHP_VERSION=7.4 \
            -f php.Dockerfile \
            .
          docker images
          docker push $IMAGE_NAME

      - name: Build node
        run: |
          IMAGE_NAME="${{ env.REGISTRY }}/docker/node:latest"
          docker buildx build \
            --tag $IMAGE_NAME \
            --platform linux/amd64,linux/arm64 \
            -f node.Dockerfile \
            .
          docker images
          docker push $IMAGE_NAME
